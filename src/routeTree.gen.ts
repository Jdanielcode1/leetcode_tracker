/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ScheduleRouteImport } from './routes/schedule'
import { Route as CalendarRouteImport } from './routes/calendar'
import { Route as AnotherPageRouteImport } from './routes/anotherPage'
import { Route as IndexRouteImport } from './routes/index'
import { Route as QuestionQuestionIdRouteImport } from './routes/question.$questionId'

const ScheduleRoute = ScheduleRouteImport.update({
  id: '/schedule',
  path: '/schedule',
  getParentRoute: () => rootRouteImport,
} as any)
const CalendarRoute = CalendarRouteImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => rootRouteImport,
} as any)
const AnotherPageRoute = AnotherPageRouteImport.update({
  id: '/anotherPage',
  path: '/anotherPage',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const QuestionQuestionIdRoute = QuestionQuestionIdRouteImport.update({
  id: '/question/$questionId',
  path: '/question/$questionId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/anotherPage': typeof AnotherPageRoute
  '/calendar': typeof CalendarRoute
  '/schedule': typeof ScheduleRoute
  '/question/$questionId': typeof QuestionQuestionIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/anotherPage': typeof AnotherPageRoute
  '/calendar': typeof CalendarRoute
  '/schedule': typeof ScheduleRoute
  '/question/$questionId': typeof QuestionQuestionIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/anotherPage': typeof AnotherPageRoute
  '/calendar': typeof CalendarRoute
  '/schedule': typeof ScheduleRoute
  '/question/$questionId': typeof QuestionQuestionIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/anotherPage'
    | '/calendar'
    | '/schedule'
    | '/question/$questionId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/anotherPage' | '/calendar' | '/schedule' | '/question/$questionId'
  id:
    | '__root__'
    | '/'
    | '/anotherPage'
    | '/calendar'
    | '/schedule'
    | '/question/$questionId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnotherPageRoute: typeof AnotherPageRoute
  CalendarRoute: typeof CalendarRoute
  ScheduleRoute: typeof ScheduleRoute
  QuestionQuestionIdRoute: typeof QuestionQuestionIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/schedule': {
      id: '/schedule'
      path: '/schedule'
      fullPath: '/schedule'
      preLoaderRoute: typeof ScheduleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/anotherPage': {
      id: '/anotherPage'
      path: '/anotherPage'
      fullPath: '/anotherPage'
      preLoaderRoute: typeof AnotherPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/question/$questionId': {
      id: '/question/$questionId'
      path: '/question/$questionId'
      fullPath: '/question/$questionId'
      preLoaderRoute: typeof QuestionQuestionIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnotherPageRoute: AnotherPageRoute,
  CalendarRoute: CalendarRoute,
  ScheduleRoute: ScheduleRoute,
  QuestionQuestionIdRoute: QuestionQuestionIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
